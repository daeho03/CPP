맵(Map)
	키(key)와 값(value)의 쌍들을 저장
	키는 중복될 수 없음
	C++ 맵은 자동 정렬되는 컨테이너
	이진 탐색 트리(binary search tree) 기반
		오름차순
	맵 생성
		map<<key_type>, <value_type>><name>
			빈 map 생성
		map<<key_type>, <value_type>><name>(const map& x)
			x라는 map과 같은 크기(size)와 데이터를 갖는 map을 생성
		std::pair<key, value>
			std::pair<first_type, second_type>
				두 데이터를 한 단위로 저장하는 구조
		insert()
			std::pair<iterator, bool> insert(const value_type& value)
				새 요소를 map에 삽입한다
				반복자와 bool 값을 한 쌍으로 반환
					반복자는 요소를 가리키고
					Bool 값은 삽입 결과를 알려줌
				키를 중복으로 삽입할 수 없음
		operator[]
			mapped_type& operator[](const key& key);
				key에 대응하는 값을 참조로 반환한다
				map에 키가 없으면 새 요소를 삽입
				map에 키가 이미 있으면 그 값을 덮어씀
	find()
		iterator find(const Key& key);
			map에서 key를 찾으면 그에 대응하는 값을 가리키는 반복자를 반환
			못 찾으면 end()를 반환
	swap(), clear()
		void swap(map& other);
			두 map의 키와 값을 서로 맞바꾼다
		void clear();
			map을 비운다
	erase()
		void erase(iterator position);
		size_type erase(const key_type& key);
		void erase(iterator firstm iterator last);
			map의 요소들을 제거한다
	맵의 장점
		std::list나 std::vector보다 탐색 속도가 더 빠름
	맵의 단점
		자동으로 정렬됨
		해쉬맵(hashmap)이 아님. 따라서 O(1)이 아님
		C++11에 해결책이 있음