Lambda Expression
	[<captures>](<parameters>) <specifiers> -> <return_type>
	캡처블록		매개변수 목록	지정자		반환형
	{ <body> }
	이름이 없는 함수 개체
	내포(nested)되는 함수
	캡처 블록
		람다식을 품는 범위(scope)안에 있는 변수를 람다 식에 넘겨줄 때 사용
		[]
			비어있음. 캡처하지 않음
		=
			값에 의한 캡처. 모든 외부 변수를 캡처함
			람다 식 안에서 수정할 수 없음
		&
			참조에 의한 캡처. 모든 외부 변수를 캡처함
		<변수 이름>
			특정 변수를 값으로 캡처
			람다 식 안에서 수정할 수 없음
		&<변수 이름>
			특정 변수를 참조로 캡처
		캡처 옵션을 섞어서 사용할 수 있음
	매개변수 목록
		선택 사항, 빈 괄호를 생략할 수 있음
	지정자
		선택 사항
		mutable
			값에 의해 캡처된 개체를 수정할 수 있게 함
	반환 형
		선택 사항
		반환 형을 적지 않으면 반환문을 통해 유추해줌
	장점
		간단한 함수를 빠르게 만들 수 있음
	단점
		디버깅하기 힘들어짐
		함수 재사용성이 낮음
	best pracitce
		1. 기본적으로, 이름 있는 함수를 쓸것
		2. 자잘한 함수는 람다로 써도 됨
		3. 정렬 함수 처럼 STL 컨테이너에 매개변수로 전달할 함수들도 좋은 후보