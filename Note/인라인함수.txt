인라인 함수(Inline Functions)
	inline <return-type> <function-name> (<argument-list>)
		함수 구현시 inline 키워드를 붙여 줄 필요 없음
	함수 호출
		함수는 메모리 안에 "할당"되어 있음
		함수를 호출하기 위해 필요한 단계
			1. 변수들을 스택에 push
			2. 함수 주소로 점프
			3. 함수를 실행
			4. 호출자 함수로 다시 jump
			5. 1번 단게에서 넣어뒀던 변수들을 pop
		cpu캐시에 최적이 아닐 수도 있음
		모던 cpu 아키텍처에서는 더 느림
	매크로와 매우 비슷한 개념
		매크로는 사전 처리기에서
		인라인 함수는 컴파일시
		인라인 함수 대신 매크로를 쓰지 말 것
			매크로는 디버깅하기 힘듬
				콜스택에 함수이름이 안 보임
				중단점도 설정 불가능
			매크로는 범위(scope)를 준수하지 않음
			왠만하면 인라인 함수 사용 할 것
	inline 키워드는 힌트일 뿐
		실제로는 인라인이 안될 수도 있음
		컴파일러가 아무 함수나 인라인 할 수도 있음
	인라인 함수 구현이 헤더 파일에 위치해야 함
		복붙을 하려면 컴파일러가 그 구현체를 볼 수 있어야 해서
		각 cpp 파일은 따로 컴파일 됨
	간단한 함수에 적합
		특히 getter나 setter에
	실행파일의 크기가 증가하기가 쉬움
		동일한 코드를 여러 번 복붙해서
		남용하지 말 것
			실행파일이 작을수록 cpu캐시하고 잘 작동 -> 속도가 빨라질 수 있음