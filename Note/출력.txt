출력
	C에 비해 쉬워짐
	std::cout << "Hello " << "world" << std::endl;
네임스페이스
	namespace hello
	{
		void HelloWorld();
	}
	hello::HelloWorld();
	java의 패키지나 C#의 네임스페이스와 비슷
	이런 것들과의 이름 충돌을 피하기 위해
		함수, 클래스, 기타 등등
using
	java의 import나 C#의 using과 비슷
	타이핑의 양을 줄이는 방법
	using 사용하지 않는 경우
		···
		std::cout << "hello, world" <<  std::endl;
		···
	using 사용하는 경우
		using namespace std;
		···
		cout << "hello, world" <<  endl;
		···
<<연산자
	+ 혹은 - 등과 같은 연산자 중 하나
	C++에서는 프로그래머가 연산자의 동작을 바꿀 수 있다
	cout << "hello, world" <<  endl << 123 << endl;
		이런 식으로 endl여러번 넣어쓸 수 있다
출력형식 지정(Output Formatting)
	16진수 출력
		int num = 10;
		cout << showbase << hex << num << endl;
조정자
	showpos/noshowpos
		showpos +부호있음
		noshowpos +부호없음
	dex/hex/oct
		진수
	uppercase/nouppercase
		uppercase 대문자로
		nouppercase 대문자로x
	showbase/noshowbase
		showbase 진법 표기
		noshowbase 진법 표기x
	left/internal/right
		left 왼쪽 정렬
		internal 숫자는 오른쪽, 부호는 왼쪽 정렬
		right 오른쪽 정렬
	showpoint/noshowpoint
		showpoint
			소수점 3자리까지 출력
		noshowpoint
			소수점x
	fixed/scientific
		fixed 고정
	boolalpha/noboolalpha
		boolalpha
			true/false로 출력
		noboolalpha
			0/1로  출력
	<iomanip>안에 있는 조정자
		setw() 컬럼수 지정
		setfill() 빈공간에 넣을 문자 지정
		setprecision() 소수점 출력시 보여줄 숫자 크기 지정